"""
Django settings for Project project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/


# Load project variables
# VAR = VALUE
with open('conf.txt', 'r') as file:
    setts = dict()
    [setts.update({i.split(' = ', 1)[0]: i.split(' = ', 1)[1].replace('\n', '')}) for i in file.readlines() if len(i) > 1]


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = setts.get('SECRET_KEY')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = setts.get('DEBUG')

ALLOWED_HOSTS = []

INTERNAL_IPS = [
    "127.0.0.1",
]


# Application definition
 
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Extensions
    'captcha',
    'celery',
    'widget_tweaks',
    'debug_toolbar',
    # Apps
    'menu',
    'user',
    'policy'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    "debug_toolbar.middleware.DebugToolbarMiddleware",
]

ROOT_URLCONF = 'Project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'Project.context_processor.get_context_data',
            ],
        },
    },
]

WSGI_APPLICATION = 'Project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': setts.get('DBNAME'),
        'USER': setts.get('DBUSER'),
        'PASSWORD': setts.get('DBPASSWORD'),
        'HOST': setts.get('DBHOST'),
        'PORT': setts.get('DBPORT')
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False

gettext = lambda s:s
LANGUAGES = (    
    ('en', gettext('English')),
    ('ru', gettext('Russia')),
    ('de', gettext('German')),
    ('fr', gettext('French')),
    ('ja', gettext('Japanese')),
    ('tr', gettext('Turkish')),
    ('uk', gettext('Ukrainian')),
)

LOCALE_PATHS = (
    [BASE_DIR / 'locale']
)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Users settings

CD_RESEND_MAIL_SEC = 60
AUTH_USER_MODEL = 'user.User'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
AUTHENTICATION_BACKENDS = (('user.backends.ModelBackend'), )
SESSION_COOKIE_AGE = 2592000  # 30 Days


# Celery and Redis settings
# celery -A Project worker -l info | sudo service redis-server start -- redis-cli

REDIS_HOST = '127.0.0.1'
REDIS_PORT = '6379'
CELERY_BROKER_URL = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'
CELERY_BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 3600}
CELERY_RESULT_BACKEND = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'


# ReCaptcha V2 (checkbox) settings

RECAPTCHA_PUBLIC_KEY = setts.get('RECAPTCHA_PUBLIC_KEY')
RECAPTCHA_PRIVATE_KEY = setts.get('RECAPTCHA_PRIVATE_KEY')


# Email-SMTP settings

DEFAULT_FROM_EMAIL = setts.get('DEFAULT_FROM_EMAIL')
EMAIL_USE_TLS = setts.get('EMAIL_USE_TLS')
EMAIL_HOST = setts.get('EMAIL_HOST')
EMAIL_HOST_USER = setts.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = setts.get('EMAIL_HOST_PASSWORD')
EMAIL_PORT = int(setts.get('EMAIL_PORT'))


# Forms conf

USERNAME_REGEX = '^[a-zA-Z0-9_.-]+$'
PASSWORD_REGEX = r"^[\w.@+-]+\Z"

MAX_LENGTH_EMAIL = 60
MIN_LENGTH_USERNAME = 6
MAX_LENGTH_USERNAME = 60

MIN_LENGTH_PASSWORD = 8
MAX_LENGTH_PASSWORD = 128  # Can't be less than this value
